import React, { useState } from 'react';
import Head from "next/head";
import { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';
import type { MenuProps } from 'antd';
import { Layout, Menu, message, Breadcrumb, Button } from "antd";
import {
  MenuUnfoldOutlined,
  MenuFoldOutlined,
} from '@ant-design/icons';
import Router, { useRouter } from "next/router";
import axios from "axios";

const { Header, Content, Sider , Footer } = Layout;
const items1: MenuProps['items'] = [
  { label: 'LOG OUT', key: 'logout'}
];

const items2: MenuProps['items'] = [UserOutlined, LaptopOutlined, NotificationOutlined].map(
  (icon, index) => {
    const key = String(index + 1);

    return {
      key: `sub${key}`,
      icon: React.createElement(icon),
      label: `subnav ${key}`,

      children: new Array(4).fill(null).map((_, j) => {
        const subKey = index * 4 + j + 1;
        return {
          key: subKey,
          label: `option${subKey}`,
        };
      }),
    };
  },
);

export default function AppLayout(props: React.PropsWithChildren<any>) {
  const {children} = props;
  const [collapsed, setCollapsed] = useState(false);
  const router = useRouter();
  const localData = localStorage.getItem("cms");
  
  const handleClick = () => {    
    axios
    .post(
      "http://cms.chtoma.com/api/logout",
      {},
      {
        headers: {
          Authorization: 'Bearer ' + JSON.parse(localData || "").token,
        },
      }
    )
    .then(() => {
      localStorage.removeItem('cms');
      router.push('/')
    })
    .catch((error:any) => {
      message.error('Logout failed'+error)
    });
  }
  
  const toggleCollapsed = () => {
    setCollapsed(!collapsed);
  };

  return (
    <Layout style={{ height: '100vh' }}>
      
      <Head>
        <title>CMS</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Sider width={200} className="site-layout-background" collapsible collapsed={collapsed}>
        <div className="logo" />
        <Menu
          mode="inline"
          defaultSelectedKeys={['1']}
          defaultOpenKeys={['sub1']}
          style={{ height: '100%', borderRight: 0 }}
          items={items2}
        />
      </Sider>

      <Layout>
        <Header className="header flex justify-end">
          <div className="logo flex-grow">
          <Button type="primary" onClick={toggleCollapsed} style={{ marginBottom: 16 }}>
            {collapsed ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}
          </Button>
          </div>
          <Menu 
            theme="dark" 
            mode="horizontal" 
            defaultSelectedKeys={['2']} 
            items={items1} 
          />
        </Header>
        <Layout style={{ padding: '0 24px 24px' }}>
          <Breadcrumb style={{ margin: '16px 0' }}>
            <Breadcrumb.Item>Home</Breadcrumb.Item>
            <Breadcrumb.Item>List</Breadcrumb.Item>
            <Breadcrumb.Item>App</Breadcrumb.Item>
          </Breadcrumb>
          <Content
            className="site-layout-background"
            style={{
              padding: 24,
              margin: 0,
              minHeight: 280,
            }}
          >
            {children}
          </Content>

          {/* <Footer style={{ textAlign: "center" }}>Â©2022</Footer> */}
        </Layout>
      </Layout>
    </Layout>
  );
}
